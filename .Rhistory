labels = scales::label_number(suffix = " K")) +
tt
plot_musee_anim
animp <-
plot_musee_anim +
transition_reveal(reveal_time) +
ease_aes()
animp
a <-
animate(animp,
start_pause= 5,
end_pause = 100,
fps = 25,
duration = 10,
width = 1000,
height = 1200,
res = 150        # Set resolution (DPI)
)
a
## tt. -------
tt <- theme(
# Title
plot.title = element_text(margin = margin(t = 15, b = 25, l = 0),
hjust = 0,
family = setfont,
face = "bold",
color ="black",
size = 22,
),
# Subtitle
plot.subtitle = element_textbox_simple(
margin = margin(b = 5, l = 0),
hjust = 0,
size = 12,
family = setfont,
colour ="gray25"),
#Caption
plot.caption = element_textbox_simple(
margin = margin(t = 25, r = 2, b = 3),
family = setfont,
face = "bold",
size = 12,
halign = 1,
vjust = -10,
colour ="gray40"
),
# Panel
panel.background = element_rect(fill = "#FAE5C6", color = NA), # Set plot panel to beige
panel.grid.major.x = element_line(color = "gray", linewidth = 0.5, linetype = "dotted"),
panel.grid.major.y = element_line(color = "gray", linewidth = 0.5, linetype = "dotted"),
panel.grid.minor.x = element_line(color = "gray", linewidth = 0.5, linetype = "dotted"),
panel.grid.minor.y = element_line(color = "gray", linewidth = 0.5, linetype = "dotted"),
# Plot
plot.background = element_rect(fill = "#FAE5C6", color = NA),  # Set background to beige
plot.margin = margin(l = 25, b = 15, r = 10),
# Axis
axis.ticks = element_blank(),
axis.text.y = element_text(
margin = margin(l = 10, r = 0),
hjust = 1,
vjust = 0,
family = setfont,
face = "bold",
color ="gray40",
size = 12,
),
axis.text.x = element_text(
size = 12,
family = setfont,
color ="gray40",
face = "bold"),   # Remove y-axis tick labels
axis.title.x = element_blank(),  # Remove x-axis title
axis.title.y = element_blank()
)
# Final Plot
plot_musee_anim <-
dataplot_slowdown %>%
ggplot(aes(x = ANNEE, y = tot, group = 1)) +
geom_line(size = 2, color = highlightmain) +
geom_point(size = 4, color = highlightmain) +
geom_text(aes(label = paste(tot)),
vjust = 0, hjust = -0.3, color =  "#3D2358",
fontface = "bold",
family = setfont,
size = 6, show.legend = FALSE) +
geom_text(aes(
x = 2016,
y = max(dataplot_slowdown$tot) - 26,
label = paste(ANNEE)),
vjust = -0.05,
hjust = 0.15,
color = "#946285",
#  fontface = "bold",
size = 25, show.legend = FALSE) +
labs(y = "Total des visiteurs",
x = "Années",
title = "Musées d'Antibes: visiteurs en hausse post-covid",
subtitle = "En milliers de visiteurs dans les musées de France",
caption = social_caption2) +
scale_x_continuous(expand = c(0, 1.3),
breaks = c(2008, 2010, 2012, 2014, 2016, 2018, 2020, 2022, 2024)) +
scale_y_continuous(expand = c(0.1, 0.1),
labels = scales::label_number(suffix = " K")) +
tt
plot_musee_anim
```{r}
#| eval: false
#| message: false
#| warning: false
# render
animp <-
plot_musee_anim +
transition_reveal(reveal_time) +
ease_aes()
# render with timing
a <-
animate(animp,
start_pause= 5,
end_pause = 100,
fps = 25,
duration = 10,
width = 1000,
height = 1200,
res = 150        # Set resolution (DPI)
)
a
#| eval: false
#| message: false
#| warning: false
# render
animp <-
plot_musee_anim +
transition_reveal(reveal_time) +
ease_aes()
# render with timing
a <-
animate(animp,
start_pause= 5,
end_pause = 100,
fps = 25,
duration = 10,
width = 1000,
height = 1200,
res = 150        # Set resolution (DPI)
)
# Chunk 1
#| message: false
#| warning: false
library(tidyverse)
library(janitor)
library(skimr)
date_caption <- "9 juin 2020"
source("tools/themes.R") # themes
# Idea : https://jrnold.github.io/priestley/articles/priestley.html
source <- read_csv2("posts/2025-01-20/data/antibes-maires-depuis1681.csv")
df <- source
# Chunk 2
#| message: false
#| warning: false
#| output: false
head(df)
tail(df)
glimpse(df)
skim(df)
summary(df)
str(df)
names(df)
colnames(df)
unique(df$MAIRE_NOM)
janitor:::tabyl(df$MAIRE_NOM)  %>% arrange(-percent)
# Chunk 3
#| message: false
#| warning: false
#| output: false
df <-
df %>%
select(3:9) %>%
select(-6) %>%
mutate_if(is.character, as.factor) %>%
mutate(duree = df$FIN_MANDAT-df$DEBUT_MANDAT_ANNEE) %>%
ungroup() %>%
arrange(MAIRE_NOM) %>%
arrange(DEBUT_MANDAT_ANNEE) %>%
group_by(MAIRE_NOM, MAIRE_PRENOM) %>%
mutate(id = cur_group_id()) %>% # group ids
mutate(dureetot = cumsum(duree)) %>%
mutate(dureetotmax = max(dureetot)) %>%
unite(idnom, c(MAIRE_PRENOM,MAIRE_NOM,id), remove = FALSE)
df <-
df %>%
mutate(CONTEXTE_HISTORIQUE = str_to_title(CONTEXTE_HISTORIQUE))
#make col with unique names
df <- df %>%
mutate(labelname = paste0(`MAIRE_PRENOM`, " ", `MAIRE_NOM`)) %>%
group_by(labelname) %>%
mutate(labelname = ifelse(row_number() == 1, labelname, NA_character_)) %>%
ungroup()
#check labelname are unique
print(df[c("idnom", "labelname")])
# Chunk 4
glimpse(df)
# Chunk 5
#| message: false
#| warning: false
#create CONTEXTE HISTORIQUE BOXES
df <-
df %>%
group_by(CONTEXTE_HISTORIQUE) %>%
mutate(CONTEXTEmin = min(DEBUT_MANDAT_ANNEE),
CONTEXTEmax = max(FIN_MANDAT)) %>%
ungroup()
#create CONTEXTE HISTORIQUE bins
df<-
df %>%
mutate(phase = cut(DEBUT_MANDAT_ANNEE,
breaks = c(1680,1800,1900,2020,2026),
labels = c("XVII-XVIIIeme", "XIXeme", "XXeme", "XXIeme"))) %>%
filter(DEBUT_MANDAT_ANNEE > 1808)
# Chunk 6
#| warning: false
timeline <-
df %>%
mutate(phase = fct_rev(phase)) %>%  # Reverse the order of facets
ggplot(aes(
x = DEBUT_MANDAT_ANNEE,
y = reorder(idnom, DEBUT_MANDAT_ANNEE),
)) +
geom_segment(aes(xend = FIN_MANDAT,
yend = idnom,
color = reorder(CONTEXTE_HISTORIQUE, FIN_MANDAT)
),
linewidth = 6, lineend = "round"
) +
geom_text(
aes(label = labelname),
size = 4.5,
hjust = 0.05,
nudge_y = 0.4,
family = setfont,
color = "gray20"
) +
geom_text(data = df %>%
filter(df$dureetotmax >= 9) %>%
group_by(idnom) %>%
summarise(dureetotmax = max(dureetotmax),
DEBUT_MANDAT_ANNEE = min(DEBUT_MANDAT_ANNEE)),
aes(
x = DEBUT_MANDAT_ANNEE,
y = reorder(idnom, DEBUT_MANDAT_ANNEE),
label = paste0(dureetotmax, " ans")
),
size = 4,
hjust = 0.1,
vjust = 2.1,
nudge_y = 0.4,
family = setfont,
color = "white",
fontface = "bold"
) +
annotate(
"label",
x = -Inf,  # Position at the far left of the plot
y = Inf,   # Position at the top of the plot
label = "
Jean LEONETTI est maire d'Antibes depuis 1995,
et totalisera 31 années de mandats d'ici 2026.
Il est aussi député des Alpes-Maritimes et
président de la communauté d'agglomération
de Sophia Antipolis depuis 2002.
L'élu détient le record de longévité après
Jean-Baptiste ROSTAN, qui a servi 34 ans
entre 1831 et 1865.",
hjust = 0,
vjust = 1,
family = setfont,
fontface = "bold",
size = 4.5,
color = "gray30",
fill = "#FAE5C6",
label.size = 0   # Removes the border around the label
) +
annotate(
"curve",
x = 1928,
xend = 1990,
y = max(as.numeric(factor(df$idnom)))-0.5,
yend = max(as.numeric(factor(df$idnom))+0.1),
curvature = -0.2,
arrow = arrow(length = unit(0.02, "npc"), type = "open"),
colour = "gray30",
size = 1.2
) +
labs(title = "Jean Leonetti : record de longévité à la mairie d'Antibes",
subtitle = "Mandats des maires d'Antibes du XIXème siècle à nos jours",
caption = social_caption2,
color ="Contexte historique") +
scale_color_manual(values = custom_palette) +
scale_fill_manual(values = custom_palette) +
tt.maires +
guides(color = guide_legend(reverse = TRUE)) +
scale_x_continuous(
limits = c(min(df$DEBUT_MANDAT_ANNEE)-1, max(df$FIN_MANDAT) + 1), # Add space
expand = expansion(mult = 0.1)                      # Add 10% space on both sides
)
# Chunk 7
#| fig.align: center
#| warning: false
timeline
View(df)
View(timeline)
View(source)
View(df)
#| message: false
#| warning: false
#| fig-height: 12
#| fig-width: 10
plot_orgs
# Chunk 1
#| message: false
#| warning: false
library(tidyverse)
library(readxl)
library(skimr)
library(plotly)
library(gghighlight)
library(patchwork)
date_caption <- "9 janvier 2024"
source("tools/themes.R") # themes
source <- read_csv("posts/2025-01-21/data/antibes-animations-sportives.csv")
df <- source
# Chunk 2
#| message: false
#| warning: false
#| output: false
head(df)
unique(df$ORGANISATEUR)
colnames(df)
glimpse(df)
max(df$`DATE FIN`)
# Chunk 3
#| message: false
#| warning: false
#| output: false
# standardize cols names and variables in chr type
df <-
df %>%
rename_with(tolower) %>%
rename_with(~ str_squish(.)) %>%
rename_with(~ str_replace_all(., " ", "_")) %>%
mutate(across(where(is.character), ~ str_squish(str_to_lower(.)))) %>%
mutate(across(c(date_debut, date_fin), as.Date))
# drop NA
df <-
df %>%
drop_na(date_debut, date_fin, organisateur)
# check no NAs are remaining
skim(df)
# remove unwanted cols
df <-
df %>%
select(animations, date_debut, date_fin, organisateur, lieu_1)
# adding useful cols
df <-
df %>% mutate(yd = year(date_debut),
md = month(date_debut),
dd = day(date_debut),
yf = year(date_fin),
mf = month(date_fin),
df = day(date_fin),
yearmonth = paste0(yd,"-", md)
) %>% arrange(yd, md, dd) %>%
mutate(duration = (date_fin - date_debut)
)
# Chunk 4
#| message: false
#| warning: false
# save file for OpenRefine
write_csv(df, "posts/2025-01-21/data/animations.csv")
# load refined data
df_refined <- read_csv("posts/2025-01-21/data/animations_openrefined.csv")
# additional cleaning step
df_refined <-
df_refined %>%
mutate(organisateur = case_when(
organisateur %in% c("asf boules", "as fontonne boule") ~ "as fontonne boules",
TRUE ~ organisateur
))
# filter year
df_refined <-
df_refined %>% filter(yd > 2019)
# title case variables
df_refined <-
df_refined %>%
mutate(across(c(lieu_1, organisateur), str_to_title))
# Chunk 5
df_refined
# Chunk 6
#| message: false
#| warning: false
#| output: false
# faceting : top organizers, locations, activities
orgs <-
df_refined %>%
count(organisateur) %>% arrange(-n)
orgs
lieux <-
df_refined %>%
count(lieu_1) %>% arrange(-n)
lieux
activities <-
df_refined %>%
count(animations) %>% arrange(-n)
activities
# Filter top 10 organisateurs
top_orgs <- orgs %>%
slice_max(order_by = n, n = 10)
# Filter top 10 lieux
top_lieux <- lieux %>%
slice_max(order_by = n, n = 10)
# Count
count.animations.year <-
df_refined %>%
count(yd)
count.animations.yearmonth <-
df_refined %>%
count(yearmonth)
# Averages
mean(df_refined$duration) # mean duration
skim(df_refined$duration) # other stats
# Chunk 7
#| message: false
#| warning: false
#| output: false
# Color
c_highlight <-"#1D6FA1"
## Col chart per month
df_plot.year.facet <-
df_refined %>%
group_by(yd, md, organisateur) %>%
count() %>%
mutate(yd = factor(yd, levels = c("2023", "2022", "2021", "2020")))
plot.year.facet <-
df_plot.year.facet %>%
ggplot(aes(x = md, y = n)) +
geom_col(fill = c_highlight, alpha = 0.6) +
geom_col(data = df_plot.year.facet %>% filter(yd == 2023), fill = c_highlight, alpha = 1) +
geom_text( # axis labels
data = data.frame(x = 12.9, y = seq(0, 40, by = 10)),
aes(x, y, label = y),
color = "black",
family = setfont,
hjust = 1,
vjust = -0.5,
size = 3.5
) +
geom_text(data = count.animations.year %>% filter(yd == 2023),
aes(x = 2, y = 34, label = paste0(n, " activités en 2023")),
family = setfont,
hjust = 0.3,
fontface = "bold",
color = c_highlight,
size = 6) +
geom_text(data = count.animations.year %>% filter(yd < 2023),
aes(x = 2, y = 34, label = paste0(n, " activités")),
family = setfont,
color = c_highlight,
hjust = 0.5,
alpha = 0.6,
size = 6) +
scale_x_continuous( limits = c(0, 13),
expand = c(0, 0),
breaks = seq(1, 12, by = 1),
labels = c("J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"),
) +
scale_y_continuous(expand = c(0, 0)) + #start axis origin at 0
facet_wrap(~yd, ncol = 1, strip.position = "left", scales = 'free_x') +
theme(legend.position = "none")
p <-
plot.year.facet +
labs(title = "Moins d'activités sportives à Antibes en 2023 par rapport à 2022",
subtitle = "Nombre d'activités sportives organisées à Antibes par mois et par années.",
caption = social_caption2) + tt2
# Bar charts for top 10s
# Plot for top 10 organisateurs
plot_orgs <- ggplot(top_orgs, aes(x = reorder(organisateur, n), y = n)) +
geom_bar(stat = "identity", fill =  "#457ECD") +
geom_text(aes(label = n), hjust = 1.8, size = 8, family = setfont, fontface = "bold", color = "white") +
coord_flip() +
labs(
title = "Top 10 des organisateurs d'activités sportives à Antibes",
subtitle = "Classement des organisations sportives d'Antibes Juan-Les-Pins, par nombre d'activités organisées. Période 2020-2023",
caption = social_caption2
) + tt4
# Plot for top 10 lieux
plot_lieux <- ggplot(top_lieux, aes(x = reorder(lieu_1, n), y = n)) +
geom_bar(stat = "identity", fill = "#FC972F") +
geom_text(aes(label = n), hjust = 1.8, size = 8, family = setfont, fontface = "bold", color = darkblue) +
coord_flip() +
labs(
title = "Top 10 des lieux d'activités sportives à Antibes",
subtitle = "Classement des lieux d'Antibes Juan-Les-Pins, par nombre d'activités sportives acceuillies. <br>Période 2020-2023",
caption = social_caption2
) + tt4
# Chunk 8
#| message: false
#| warning: false
#| fig-height: 12
#| fig-width: 10
plot_orgs
plot_lieux
p
plot_orgs + plot_lieux
